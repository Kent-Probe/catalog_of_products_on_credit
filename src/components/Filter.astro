---
import Arrow from "@/icon/Arrow.astro";
import Accordion from "@/layouts/Accordion.astro";
import FilterIcon from "@/icon/FilterIcon.astro";
import FilterSlideRam from "@/components/filters/FilterSlideRam.astro";
import FilterSlideRom from "@/components/filters/FilterSlideRom.astro";
import FilterSlideCamera from "@/components/filters/FilterSlideCamera.astro";
import FilterSlideBaterry from "@/components/filters/FilterSlideBaterry.astro";

let searchTerm = ''
let financials: string[] = [];
let ram: string[] = [];
let rom: string[] = [];
let baterry: string[] = [];
let camera: string[] = [];

if (Astro.request.url) {
    const url = new URL(Astro.request.url);
    searchTerm = url.searchParams.get('search') || '';
    financials = url.searchParams.get('financials')?.toLowerCase().split(',') || [];
    ram = url.searchParams.get('ram')?.split(',') || [];
    rom = url.searchParams.get('rom')?.split(',') || [];
    baterry = url.searchParams.get('battery')?.split(',') || [];
    camera = url.searchParams.get('camera')?.split(',') || [];    
}

---

<script>
    const acc = document.getElementsByClassName("accordion");
    let i: number = 0;
    
    for (i = 0; i < acc.length; i++) {
      acc[i].addEventListener("click", function() {
        this.classList.toggle("active");
        var panel = this.nextElementSibling;
        if (panel.style.maxHeight) {
          panel.style.maxHeight = null;
        } else {
          panel.style.maxHeight = panel.scrollHeight + "px";
        } 
        const arrow = this.children[1];
        if (arrow.style.transform === "rotate(180deg)") {
            arrow.style.transform = "rotate(0deg)";
        } else {
            arrow.style.transform = "rotate(180deg)";
        }
      });
    }

    const buttonFilter = document.querySelector("[data-button='filter']");
    const formFilter = document.querySelector("[data-form-filter]");
    formFilter.addEventListener("submit", (e) => {
        e.preventDefault();
        window.location.reload();
    });
    buttonFilter.addEventListener("click", (e) => {
        let filtersBase = {}
        let financials = [];
        const celya = document.querySelector("[data-checkbox-celya]").checked;
        const krediya = document.querySelector("[data-checkbox-krediya]").checked;
        const alocred = document.querySelector("[data-checkbox-alocred]").checked;

        const minValRam = parseInt(document.querySelector("[data-input-minram]").value);
        const maxValRam = parseInt(document.querySelector("[data-input-maxram]").value);

        const minValRom = parseInt(document.querySelector("[data-input-minrom]").value);
        const maxValRom = parseInt(document.querySelector("[data-input-maxrom]").value);

        const minValBaterry = parseInt(document.querySelector("[data-input-minbaterry]").value);
        const maxValBaterry = parseInt(document.querySelector("[data-input-maxbaterry]").value);

        const minValCamera = parseInt(document.querySelector("[data-input-mincamera]").value);
        const maxValCamera = parseInt(document.querySelector("[data-input-maxcamera]").value);

        if(celya){
            financials.push("Celya");
        }
        if(krediya){
            financials.push("Krediya");
        }
        if(alocred){
            financials.push("Alo Cred");
        }

        if(financials.length > 0){
            filtersBase = {...filtersBase, financials: financials}
        }

        if(minValRam !== 0 && maxValRam !== 0 && minValRam !== maxValRam){
            filtersBase = {...filtersBase, ram: {min: minValRam, max: maxValRam}}
        }

        if(minValRom !== 0 && maxValRom !== 0 && minValRom !== maxValRom){
            filtersBase = {...filtersBase, rom: {min: minValRom, max: maxValRom}}
        }

        if(minValBaterry !== 0 && maxValBaterry !== 0 && minValBaterry !== maxValBaterry){
            filtersBase = {...filtersBase, battery: {min: minValBaterry, max: maxValBaterry}}
        }

        if(minValCamera !== 0 && maxValCamera !== 0 && minValCamera !== maxValCamera){
            filtersBase = {...filtersBase, camera: {min: minValCamera, max: maxValCamera}}
        }
        const url = new URL(window.location);
        if(JSON.stringify(filtersBase) === "{}"){
            url.searchParams.delete("financials");
            url.searchParams.delete("ram");
            url.searchParams.delete("rom");
            url.searchParams.delete("battery");
            url.searchParams.delete("camera");
        }else{
            const paramToSend = Object.entries(filtersBase).map(([key, value]) => {
                let param = "";
                if(key === "financials"){
                    param = `${value.join(",")}`;
                }else{
                    param = `${value.min},${value.max}`;
                }
                url.searchParams.set(key, param);
            });
        }
        window.history.pushState({}, '', url);
    });
</script>
    

<div class="container">
    <form data-form-filter action="" method="get">
        <Accordion title="Financieras">
            <label class="container_cb">Celya
                <input checked={financials.includes("celya")} data-checkbox-celya type="checkbox">
                <span class="checkmark"></span>
            </label>
            <label class="container_cb">Krediya
                <input checked={financials.includes("krediya")} data-checkbox-krediya type="checkbox">
                <span class="checkmark"></span>
            </label>
            <label class="container_cb">Alo Cred
                <input checked={financials.includes("alo cred")} data-checkbox-alocred type="checkbox">
                <span class="checkmark"></span>
            </label>
        </Accordion>
    
        <Accordion title="RAM">
            <FilterSlideRam id="ram" typeFilter="GB" min={2} max={512} minCurrent={ram[0] ?? 2} maxCurrent={ram[1] ?? 512} title="Seleccione el rango de RAM" />
        </Accordion>
    
        <Accordion title="Almacenamiento">
            <FilterSlideRom id="rom" typeFilter="GB" min={8} max={1024} minCurrent={rom[0] ?? 8} maxCurrent={rom[1] ?? 1024} title="Seleccione el rango de Almacenamiento" />
        </Accordion>
    
        <Accordion title="Cámara principal">
            <FilterSlideCamera id="cam-principal" typeFilter="MP" min={5} max={300} minCurrent={camera[0] ?? 5} maxCurrent={camera[1] ?? 300} title="Seleccione el rango de MP" />
        </Accordion>
    
        <Accordion title="Batería">
            <FilterSlideBaterry steper={50} id="baterry" typeFilter="mAh" min={2000} max={10000} minCurrent={baterry[0] ?? 2000} maxCurrent={baterry[1] ?? 10000} title="Seleccione el rango de mAh" />
        </Accordion>
    
        <button data-button="filter" type="submit" class="btn-filter">
            <FilterIcon />
            Aplicar Filtros
        </button>
    </form>
</div>

<style>
    .container {
        width: 100%;
    }

    .container_cb {
        display: block;
        position: relative;

        padding-left: 3.5rem;
        margin-bottom: 1.2rem;
        
        font-size: 1.5rem;

        user-select: none;
        cursor: pointer;
    }

    .container_cb input {
        position: absolute;
        opacity: 0;
        height: 0;
        width: 0;

        cursor: pointer;
    }

    .checkmark {
        position: absolute;
        top: 0;
        left: 0;
        height: 2rem;
        width: 2rem;
        background-color: #eee;
    }

    .container_cb:hover input ~ .checkmark {
        background-color: #ccc;
    }

    .container_cb input:checked ~ .checkmark {
        background-color: rebeccapurple;
    }

    .checkmark:after {
        content: "";
        position: absolute;
        display: none;
    }

    .container_cb input:checked ~ .checkmark:after {
        display: block;
    }

    .container_cb .checkmark:after {
        left: 6px;
        top: 2px;
        width: 5px;
        height: 10px;
        border: solid white;
        border-width: 0 3px 3px 0;
        -webkit-transform: rotate(45deg);
        -ms-transform: rotate(45deg);
        transform: rotate(45deg);
    }

    button{
        width: 100%;
        padding: 1.5rem;
        margin-top: 1.5rem;

        font-size: 1.5rem;
        font-weight: 600;
        border: none;
        border-radius: 0.5rem;
        color: white;
        background-color: rebeccapurple;

        display: flex;
        align-items: center;
        justify-content: center;
        gap: 1rem;

        cursor: pointer;
        margin-bottom: 1.5rem;

        transition: 0.4s ease-in-out;

        &:hover{
            background-color: #5200a4;
            scale: 0.96;
        }
    }

</style>
    